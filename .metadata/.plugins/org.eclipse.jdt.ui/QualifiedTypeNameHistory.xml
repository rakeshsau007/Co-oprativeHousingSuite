<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.oidc.OidcIdToken"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.oidc.OidcUserInfo"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.AuthenticationException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler"/>
    <fullyQualifiedTypeName name="org.springframework.web.context.request.WebRequest"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.MethodArgumentNotValidException"/>
    <fullyQualifiedTypeName name="org.springframework.validation.BindingResult"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="validator.PasswordMatches"/>
    <fullyQualifiedTypeName name="dto.UserInfo"/>
    <fullyQualifiedTypeName name="service.LocalUserDetailService"/>
    <fullyQualifiedTypeName name="config.AppProperties"/>
    <fullyQualifiedTypeName name="exception.BadRequestException"/>
    <fullyQualifiedTypeName name="util.CookieUtils"/>
    <fullyQualifiedTypeName name="util.GeneralUtils"/>
    <fullyQualifiedTypeName name="config.CurrentUser"/>
    <fullyQualifiedTypeName name="repo.UserRepository"/>
    <fullyQualifiedTypeName name="repo.RoleRepository"/>
    <fullyQualifiedTypeName name="model.User"/>
    <fullyQualifiedTypeName name="dto.SocialProvider"/>
    <fullyQualifiedTypeName name="security.oauth2.CustomOAuth2UserService"/>
    <fullyQualifiedTypeName name="security.oauth2.CustomOidcUserService"/>
    <fullyQualifiedTypeName name="security.oauth2.OAuth2AuthenticationSuccessHandler"/>
    <fullyQualifiedTypeName name="security.oauth2.OAuth2AuthenticationFailureHandler"/>
    <fullyQualifiedTypeName name="security.jwt.TokenAuthenticationFilter"/>
    <fullyQualifiedTypeName name="security.oauth2.HttpCookieOAuth2AuthorizationRequestRepository"/>
    <fullyQualifiedTypeName name="security.oauth2.OAuth2AccessTokenResponseConverterWithDefaults"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.EnableJpaRepositories"/>
    <fullyQualifiedTypeName name="org.springframework.transaction.annotation.EnableTransactionManagement"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.servlet.support.SpringBootServletInitializer"/>
    <fullyQualifiedTypeName name="org.springframework.boot.builder.SpringApplicationBuilder"/>
    <fullyQualifiedTypeName name="service.UserService"/>
    <fullyQualifiedTypeName name="security.jwt.TokenProvider"/>
    <fullyQualifiedTypeName name="dto.LoginRequest"/>
    <fullyQualifiedTypeName name="dto.LocalUser"/>
    <fullyQualifiedTypeName name="dto.SignUpRequest"/>
    <fullyQualifiedTypeName name="exception.UserAlreadyExistAuthenticationException"/>
    <fullyQualifiedTypeName name="dto.ApiResponse"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.common.util.impl.Log_.logger"/>
    <fullyQualifiedTypeName name="dto.JwtAuthenticationResponse"/>
    <fullyQualifiedTypeName name="org.apache.commons.logging.Log"/>
    <fullyQualifiedTypeName name="model.Role"/>
    <fullyQualifiedTypeName name="security.oauth2.user.OAuth2UserInfo"/>
    <fullyQualifiedTypeName name="exception.OAuth2AuthenticationProcessingException"/>
    <fullyQualifiedTypeName name="security.oauth2.user.OAuth2UserInfoFactory"/>
</qualifiedTypeNameHistroy>
